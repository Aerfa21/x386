#!/usr/bin/env python2
# -*- coding:utf-8 -*-

"""


仅做学习研究之用，严禁用于非法用途，否则后果自负！



原文参考：http://www.freebuf.com/articles/database/143402.html



根据火车票上大码的身份证号推算正确的身份证号

这种法子在社工无法获取目标准确年月日的情况下的尝试





身份证校验码生成规则是：

（1）十七位数字本体码加权求和公式 

S = Sum(Ai * Wi), i = 0, … , 16 ，先对前17位数字的权求和 

Ai:表示第i位置上的身份证号码数字值 

Wi:表示第i位置上的加权因子 

Wi: 7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2 

（2）计算模 

Y = mod(S, 11) 

（3）通过模得到对应的校验码 

Y: 0 1 2 3 4 5 6 7 8 9 10 

校验码: 1 0 X 9 8 7 6 5 4 3 2


"""


import time


s = "2113241992****3014"

print [s.replace('****',j[4:]) for j in [time.strftime('%Y%m%d',time.localtime(i)) for i in range(int(time.mktime(time.strptime(s[6:10] + '0101','%Y%m%d'))),int(time.mktime(time.strptime(s[6:10]+'1231','%Y%m%d'))) + 1,3600*24)] if s[-1] == '10X98765432'[sum(map(lambda x: int(x[0]) * x[1], zip(s.replace('****',j[4:]), [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]) )) % 11]]



"""

分析一下代码


1）第一步生成所有可能的年月日组合

[time.strftime('%Y%m%d',time.localtime(i)) for i in range(int(time.mktime(time.strptime(s[6:10] + '0101','%Y%m%d'))),int(time.mktime(time.strptime(s[6:10]+'1231','%Y%m%d'))) + 1,3600*24)]

生成所有19920101 - 19921231 之间所有的组合

int(time.mktime(time.strptime(s[6:10] + '0101','%Y%m%d')))  先把19920101 变成最小时间戳(s)
int(time.mktime(time.strptime(s[6:10] + '1231','%Y%m%d')))	再把19921231 变成最大时间戳(s)

range(int(time.mktime(time.strptime(s[6:10] + '0101','%Y%m%d'))),int(time.mktime(time.strptime(s[6:10]+'1231','%Y%m%d'))) + 1,3600*24)]

range的步长是1天的秒数

time.strftime('%Y%m%d',time.localtime(i))   将时间戳变成19921010 这种格式的字符串



2）

'10X98765432'[sum(map(lambda x: int(x[0]) * x[1], zip(s.replace('****',j[4:]), [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]) )) % 11]

对1）中每一个可能的年月日组合计算其校验码，如果生成的校验码和实际的一样，则是候选id


3）最后在使用在线id验证校验是否为合法id



#result 
['211324199201043014', '211324199201123014', '211324199201203014', '211324199202193014', '211324199202273014', '211324199203073014', '211324199203153014', '211324199203233014', '211324199203313014', '211324199204033014', '211324199204113014', '211324199205183014', '211324199205263014', '211324199206063014', '211324199206143014', '211324199206223014', '211324199206303014', '211324199207023014', '211324199207103014', '211324199207293014', '211324199208093014', '211324199208173014', '211324199208253014', '211324199209053014', '211324199209133014', '211324199209213014', '211324199210193014', '211324199210273014', '211324199211073014', '211324199211153014', '211324199211233014', '211324199212033014', '211324199212113014']





最后，强烈建议12306 将校验码打赏马赛克，以增加破解难度


"""






